import socket
import turtle
import serial
from turtle import *
import math

# Arduino IP address and port
arduino_ip = "192.168.223.183"  # Replace with the Arduino's IP address
arduino_port = 139  # Replace with the port number used in the Arduino code

# Create UDP socket
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

# Bind the socket to the Arduino IP and port
sock.bind((arduino_ip, arduino_port))

t1 = turtle.Turtle()

t2 = turtle.Turtle()
t3 = turtle.Turtle()
t4 = turtle.Turtle()
t5 = turtle.Turtle()
t6 = turtle.Turtle()
t7 = turtle.Turtle()
t8 = turtle.Turtle()
t9 = turtle.Turtle()

t10= turtle.Turtle()

t11= turtle.Turtle()
t12= turtle.Turtle()
t13= turtle.Turtle()
t14= turtle.Turtle()
t15= turtle.Turtle()
t16= turtle.Turtle()
t17= turtle.Turtle()
t18= turtle.Turtle()

t = turtle.Turtle()
t.hideturtle()
t.penup()
t.forward(10)
t.left(90)
path = r"D:\Downloads\gridbackground.png"
style = ('calibri', 15, 'normal')
t.write((0,0),font=style)
screensize(500,500)
bgpic(path)


style3 = ('Time New Roman', 15, 'normal')
scale = turtle.Turtle()
scale.speed(0)
scale.hideturtle()
scale.penup()
scale.forward(450)
scale.left(90)
scale.forward(310)
scale.write("Scale",font=style3)

scale = turtle.Turtle()
scale.speed(0)
scale.hideturtle()
scale.penup()
scale.forward(320)
scale.left(90)
scale.forward(280)
scale.write("On x-axis: 1 unit equals to 84 cm",font=style3)

scale = turtle.Turtle()
scale.speed(0)
scale.hideturtle()
scale.penup()
scale.forward(320)
scale.left(90)
scale.forward(250)
scale.write("On y-axis: 1 unit equals to 84 cm",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.forward(84)
l.right(90)
l.pendown()
l.width(3)
l.forward(10)
l.penup()
l.forward(25)
l.right(90)
l.forward(10)
l.write("84",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.forward(168)
l.right(90)
l.pendown()
l.width(3)
l.forward(10)
l.penup()
l.forward(25)
l.right(90)
l.forward(10)
l.write("168",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.forward(252)
l.right(90)
l.pendown()
l.width(3)
l.forward(10)
l.penup()
l.forward(25)
l.right(90)
l.forward(10)
l.write("252",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.forward(336)
l.right(90)
l.pendown()
l.width(3)
l.forward(10)
l.penup()
l.forward(25)
l.right(90)
l.forward(10)
l.write("336",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.right(180)
l.forward(84)
l.left(90)
l.pendown()
l.width(3)
l.forward(10)
l.penup()
l.forward(25)
l.right(90)
l.forward(10)
l.write("84",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.right(180)
l.forward(84*2)
l.left(90)
l.pendown()
l.width(3)
l.forward(10)
l.penup()
l.forward(25)
l.right(90)
l.forward(10)
l.write("168",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.right(180)
l.forward(84*3)
l.left(90)
l.pendown()
l.width(3)
l.forward(10)
l.penup()
l.forward(25)
l.right(90)
l.forward(10)
l.write("252",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.right(180)
l.forward(84*4)
l.left(90)
l.pendown()
l.width(3)
l.forward(10)
l.penup()
l.forward(25)
l.right(90)
l.forward(10)
l.write("336",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.right(180)
l.forward(84*5)
l.left(90)
l.pendown()
l.width(3)
l.forward(10)
l.penup()
l.forward(25)
l.right(90)
l.forward(10)
l.write("420",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.right(180)
l.forward(84*7)
l.left(90)
l.forward(30)
l.right(90)
l.forward(10)
l.write("X-axis",font=style3)

y = turtle.Turtle()
y.speed(0)
y.hideturtle()
y.penup()
y.left(90)
y.forward(84)
y.left(90)
y.pendown()
y.width(3)
y.forward(10)
y.penup()
y.forward(25)
y.left(90)
y.forward(10)
y.write("84",font=style3)

y = turtle.Turtle()
y.speed(0)
y.hideturtle()
y.penup()
y.left(90)
y.forward(84*2)
y.left(90)
y.pendown()
y.width(3)
y.forward(10)
y.penup()
y.forward(35)
y.left(90)
y.forward(10)
y.write("168",font=style3)

y = turtle.Turtle()
y.speed(0)
y.hideturtle()
y.penup()
y.left(90)
y.forward(84*3)
y.left(90)
y.pendown()
y.width(3)
y.forward(10)
y.penup()
y.forward(35)
y.left(90)
y.forward(10)
y.write("252",font=style3)

y = turtle.Turtle()
y.speed(0)
y.hideturtle()
y.penup()
y.right(90)
y.forward(84)
y.right(90)
y.pendown()
y.width(3)
y.forward(10)
y.penup()
y.forward(25)
y.left(90)
y.forward(10)
y.write("84",font=style3)

y = turtle.Turtle()
y.speed(0)
y.hideturtle()
y.penup()
y.right(90)
y.forward(84*2)
y.right(90)
y.pendown()
y.width(3)
y.forward(10)
y.penup()
y.forward(35)
y.left(90)
y.forward(10)
y.write("168",font=style3)

y = turtle.Turtle()
y.speed(0)
y.hideturtle()
y.penup()
y.right(90)
y.forward(84*3)
y.right(90)
y.pendown()
y.width(3)
y.forward(10)
y.penup()
y.forward(35)
y.left(90)
y.forward(10)
y.write("252",font=style3)

y = turtle.Turtle()
y.speed(0)
y.hideturtle()
y.penup()
y.right(90)
y.forward(84*4)
y.right(90)
y.pendown()
y.width(3)
y.forward(10)
y.penup()
y.forward(35)
y.left(90)
y.forward(10)
y.write("336",font=style3)

l = turtle.Turtle()
l.speed(0)
l.hideturtle()
l.penup()
l.left(90)
l.forward(300)
l.right(90)
l.forward(10)
l.write("Y-axis",font=style3)

s1 = turtle.Turtle()
s1.speed(0)
s1.hideturtle()
s1.penup()
s1.forward(400)
s1.left(90)
s1.forward(150)
s1.write("Sensor-1: "+"0"+" cm",font=style3)

s2 = turtle.Turtle()
s2.speed(0)
s2.hideturtle()
s2.penup()
s2.forward(400)
s2.left(90)
s2.forward(120)
s2.write("Sensor-2: "+"0"+" cm",font=style3)

s3 = turtle.Turtle()
s3.speed(0)
s3.hideturtle()
s3.penup()
s3.forward(400)
s3.left(90)
s3.forward(90)
s3.write("Sensor-3: "+"0"+" cm",font=style3)

s4 = turtle.Turtle()
s4.speed(0)
s4.hideturtle()
s4.penup()
s4.forward(400)
s4.left(90)
s4.forward(60)
s4.write("Sensor-4: "+"0"+" cm",font=style3)

s5 = turtle.Turtle()
s5.speed(0)
s5.hideturtle()
s5.penup()
s5.forward(400)
s5.left(90)
s5.forward(30)
s5.write("Sensor-5: "+"0"+" cm",font=style3)

s6 = turtle.Turtle()
s6.speed(0)
s6.hideturtle()
s6.penup()
s6.forward(400)
s6.write("Sensor-6: "+"0"+" cm",font=style3)

s7 = turtle.Turtle()
s7.speed(0)
s7.hideturtle()
s7.penup()
s7.forward(400)
s7.right(90)
s7.forward(30)
s7.write("Sensor-7: "+"0"+" cm",font=style3)

s8 = turtle.Turtle()
s8.speed(0)
s8.hideturtle()
s8.penup()
s8.forward(400)
s8.right(90)
s8.forward(60)
s8.write("Sensor-8: "+"0"+" cm",font=style3)

s9 = turtle.Turtle()
s9.speed(0)
s9.hideturtle()
s9.penup()
s9.forward(400)
s9.right(90)
s9.forward(90)
s9.write("Sensor-9: "+"0"+" cm",font=style3)

s10 = turtle.Turtle()
s10.speed(0)
s10.hideturtle()
s10.penup()
s10.forward(400)
s10.right(90)
s10.forward(120)
s10.write("Sensor-10: "+"0"+" cm",font=style3)

s11 = turtle.Turtle()
s11.speed(0)
s11.hideturtle()
s11.penup()
s11.forward(400)
s11.right(90)
s11.forward(150)
s11.write("Sensor-11: "+"0"+" cm",font=style3)

s12 = turtle.Turtle()
s12.speed(0)
s12.hideturtle()
s12.penup()
s12.forward(400)
s12.right(90)
s12.forward(180)
s12.write("Sensor-12: "+"0"+" cm",font=style3)

s13 = turtle.Turtle()
s13.speed(0)
s13.hideturtle()
s13.penup()
s13.forward(400)
s13.right(90)
s13.forward(210)
s13.write("Sensor-13: "+"0"+" cm",font=style3)

s14 = turtle.Turtle()
s14.speed(0)
s14.hideturtle()
s14.penup()
s14.forward(400)
s14.right(90)
s14.forward(240)
s14.write("Sensor-14: "+"0"+" cm",font=style3)

s15 = turtle.Turtle()
s15.speed(0)
s15.hideturtle()
s15.penup()
s15.forward(400)
s15.right(90)
s15.forward(270)
s15.write("Sensor-15: "+"0"+" cm",font=style3)

s16 = turtle.Turtle()
s16.speed(0)
s16.hideturtle()
s16.penup()
s16.forward(400)
s16.right(90)
s16.forward(300)
s16.write("Sensor-16: "+"0"+" cm",font=style3)

t2.speed(20)
t3.speed(20)
t4.speed(20)
t5.speed(20)
t6.speed(20)
t7.speed(20)
t8.speed(20)
t9.speed(20)
t11.speed(20)
t12.speed(20)
t13.speed(20)
t14.speed(20)
t15.speed(20)
t16.speed(20)
t17.speed(20)
t18.speed(20)


style1 = ('calibri', 25, 'normal')
ta = turtle.Turtle()
ta.speed(0)
ta.hideturtle()
ta.penup()
ta.left(77.5)
ta.forward(250)
ta.write('1',font=style1)

tb = turtle.Turtle()
tb.speed(0)
tb.hideturtle()
tb.penup()
tb.left(102.5)
tb.forward(250)
tb.write('2',font=style1)

tc = turtle.Turtle()
tc.speed(0)
tc.hideturtle()
tc.penup()
tc.left(127.5)
tc.forward(250)
tc.write('3',font=style1)

td = turtle.Turtle()
td.speed(0)
td.hideturtle()
td.penup()
td.left(152.5)
td.forward(250)
td.write('4',font=style1)

te = turtle.Turtle()
te.speed(0)
te.hideturtle()
te.penup()
te.left(175)
te.forward(250)
te.write('5',font=style1)

tf = turtle.Turtle()
tf.speed(0)
tf.hideturtle()
tf.penup()
tf.left(197.5)
tf.forward(250)
tf.write('6',font=style1)

tg = turtle.Turtle()
tg.speed(0)
tg.hideturtle()
tg.penup()
tg.left(218.5)
tg.forward(250)
tg.write('7',font=style1)

th = turtle.Turtle()
th.speed(0)
th.hideturtle()
th.penup()
th.left(240)
th.forward(250)
th.write('8',font=style1)

ti = turtle.Turtle()
ti.speed(0)
ti.hideturtle()
ti.penup()
ti.left(260)
ti.forward(250)
ti.write('9',font=style1)

tj = turtle.Turtle()
tj.speed(0)
tj.hideturtle()
tj.penup()
tj.left(277)
tj.forward(250)
tj.write('10',font=style1)

tk = turtle.Turtle()
tk.speed(0)
tk.hideturtle()
tk.penup()
tk.left(299.5)
tk.forward(250)
tk.write('11',font=style1)

tl = turtle.Turtle()
tl.speed(0)
tl.hideturtle()
tl.penup()
tl.left(322)
tl.forward(250)
tl.write('12',font=style1)

tm = turtle.Turtle()
tm.speed(0)
tm.hideturtle()
tm.penup()
tm.left(344.5)
tm.forward(250)
tm.write('13',font=style1)

tn = turtle.Turtle()
tn.speed(0)
tn.hideturtle()
tn.penup()
tn.left(370)
tn.forward(250)
tn.write('14',font=style1)

tp = turtle.Turtle()
tp.speed(0)
tp.hideturtle()
tp.penup()
tp.left(392.5)
tp.forward(250)
tp.write('15',font=style1)

tq = turtle.Turtle()
tq.speed(0)
tq.hideturtle()
tq.penup()
tq.left(415)
tq.forward(250)
tq.write('16',font=style1)


t10.shape("circle")
t10.shapesize(0.5,0.5,1)

t1.shape("circle")
t1.shapesize(0.5,0.5,1)
t2.shape("circle")
t2.shapesize(0.5,0.5,1)
t3.shape("circle")
t3.shapesize(0.5,0.5,1)
t4.shape("circle")
t4.shapesize(0.5,0.5,1)
t5.shape("circle")
t5.shapesize(0.5,0.5,1)
t6.shape("circle")
t6.shapesize(0.5,0.5,1)
t7.shape("circle")
t7.shapesize(0.5,0.5,1)
t8.shape("circle")
t8.shapesize(0.5,0.5,1)
t9.shape("circle")
t9.shapesize(0.5,0.5,1)
t10.shape("circle")
t10.shapesize(0.5,0.5,1)
t11.shape("circle")
t11.shapesize(0.5,0.5,1)
t12.shape("circle")
t12.shapesize(0.5,0.5,1)
t13.shape("circle")
t13.shapesize(0.5,0.5,1)
t14.shape("circle")
t14.shapesize(0.5,0.5,1)
t15.shape("circle")
t15.shapesize(0.5,0.5,1)
t16.shape("circle")
t16.shapesize(0.5,0.5,1)
t17.shape("circle")
t17.shapesize(0.5,0.5,1)
t18.shape("circle")
t18.shapesize(0.5,0.5,1)

t2.right(22.5)
t2.forward(300)
t3.right(45)
t3.forward(300)
t4.right(67.5)
t4.forward(300)
t5.right(90)
t5.forward(300)
t6.right(112.5)
t6.forward(300)
t7.right(135)
t7.forward(300)
t8.right(157.5)
t8.forward(300)
t9.right(180)
t9.forward(300)
t11.right(202.5)
t11.forward(300)
t12.right(225)
t12.forward(300)
t13.right(247.5)
t13.forward(300)
t14.right(270)
t14.forward(300)
t15.right(292.5)
t15.forward(300)
t16.right(315)
t16.forward(300)
t17.right(337.5)
t17.forward(300)
t18.right(360)
t18.forward(300)

tracer(0)

# Main program loop to receive data
for i in range(10000000):
    data, address = sock.recvfrom(1024)  # Receive data from Arduino
    string = data.decode()
    # distance = int(str)  # Convert data to integer

    str = string.split(",")
    str1 = str[0]
    str2 = str[1]
    str3 = str[2]
    str4 = str[3]
    str5 = str[4]
    str6 = str[5]
    str7 = str[6]
    str8 = str[7]
    str9 = str[8]
    str10 = str[9]
    str11 = str[10]
    str12 = str[11]
    str13 = str[12]
    str14 = str[13]
    str15 = str[14]
    str16 = str[15]
    str17 = str[16]
    str18 = str[17].rstrip()
    str19 = str[18]
    str20 = str[19].rstrip()

    num1 = float(str1)
    num2 = float(str2)  # convert the unicode string to an int
    num3 = float(str3)
    num4 = float(str4)
    num5 = float(str5)
    num6 = float(str6)
    num7 = float(str7)
    num8 = float(str8)
    num9 = float(str9)
    num10 = float(str10)
    num11 = float(str11)
    num12 = float(str12)
    num13 = float(str13)
    num14 = float(str14)
    num15 = float(str15)
    num16 = float(str16)
    num17 = float(str17)
    num18 = float(str18)
    num21 = float(str19)
    num22 = float(str20)

    print(num1, num2, num3, num4, num5, num6, num7, num8, num9, num10, num11, num12, num13, num14, num15, num16, num17, num18, num21, num22)

    num19 = num17*100
    num20 = num18*100
    t10.speed(20)
    t10.goto(num19, num20)
    t.undo()
    t.write((num19, num20), font=style)
    delay(0)

    t2.clear()
    t2.goto(num19,num20)

    t3.clear()
    t3.goto(num19, num20)

    t4.clear()
    t4.goto(num19, num20)

    t5.clear()
    t5.goto(num19, num20)

    t6.clear()
    t6.goto(num19, num20)

    t7.clear()
    t7.goto(num19, num20)

    t8.clear()
    t8.goto(num19, num20)

    t9.clear()
    t9.goto(num19, num20)

    t11.clear()
    t11.goto(num19, num20)

    t12.clear()
    t12.goto(num19, num20)

    t13.clear()
    t13.goto(num19, num20)

    t14.clear()
    t14.goto(num19, num20)

    t15.clear()
    t15.goto(num19, num20)

    t16.clear()
    t16.goto(num19, num20)

    t17.clear()
    t17.goto(num19, num20)

    t18.clear()
    t18.goto(num19, num20)

    ta.clear()
    ta.goto(num19, num20)

    tb.clear()
    tb.goto(num19, num20)

    tc.clear()
    tc.goto(num19, num20)

    td.clear()
    td.goto(num19, num20)

    te.clear()
    te.goto(num19, num20)

    tf.clear()
    tf.goto(num19, num20)

    tg.clear()
    tg.goto(num19, num20)

    th.clear()
    th.goto(num19, num20)

    ti.clear()
    ti.goto(num19, num20)

    tj.clear()
    tj.goto(num19, num20)

    tk.clear()
    tk.goto(num19, num20)

    tl.clear()
    tl.goto(num19, num20)

    tm.clear()
    tm.goto(num19, num20)

    tn.clear()
    tn.goto(num19, num20)

    tp.clear()
    tp.goto(num19, num20)

    tq.clear()
    tq.goto(num19, num20)

    update()

    t2.forward(300)
    t3.forward(300)
    t4.forward(300)
    t5.forward(300)
    t6.forward(300)
    t7.forward(300)
    t8.forward(300)
    t9.forward(300)
    t11.forward(300)
    t12.forward(300)
    t13.forward(300)
    t14.forward(300)
    t15.forward(300)
    t16.forward(300)
    t17.forward(300)
    t18.forward(300)

    ta.forward(250)
    ta.write('1', font=style1)

    tb.forward(250)
    tb.write('2', font=style1)

    tc.forward(250)
    tc.write('3', font=style1)

    td.forward(250)
    td.write('4', font=style1)

    te.forward(250)
    te.write('5', font=style1)

    tf.forward(250)
    tf.write('6', font=style1)

    tg.forward(250)
    tg.write('7', font=style1)

    th.forward(250)
    th.write('8', font=style1)

    ti.forward(250)
    ti.write('9', font=style1)

    tj.forward(250)
    tj.write('10', font=style1)

    tk.forward(250)
    tk.write('11', font=style1)

    tl.forward(250)
    tl.write('12', font=style1)

    tm.forward(250)
    tm.write('13', font=style1)

    tn.forward(250)
    tn.write('14', font=style1)

    tp.forward(250)
    tp.write('15', font=style1)

    tq.forward(250)
    tq.write('16', font=style1)

    s1.undo()
    s1.write("Sensor-1: "+str1+" cm", font=style3)

    s2.undo()
    s2.write("Sensor-2: " + str2 + " cm", font=style3)

    s3.undo()
    s3.write("Sensor-3: " + str3 + " cm", font=style3)

    s4.undo()
    s4.write("Sensor-4: " + str4 + " cm", font=style3)

    s5.undo()
    s5.write("Sensor-5: " + str5 + " cm", font=style3)

    s6.undo()
    s6.write("Sensor-6: " + str6 + " cm", font=style3)

    s7.undo()
    s7.write("Sensor-7: " + str7 + " cm", font=style3)

    s8.undo()
    s8.write("Sensor-8: " + str8 + " cm", font=style3)

    s9.undo()
    s9.write("Sensor-9: " + str9 + " cm", font=style3)

    s10.undo()
    s10.write("Sensor-10: " + str10 + " cm", font=style3)

    s11.undo()
    s11.write("Sensor-11: " + str11 + " cm", font=style3)

    s12.undo()
    s12.write("Sensor-12: " + str12 + " cm", font=style3)

    s13.undo()
    s13.write("Sensor-13: " + str13 + " cm", font=style3)

    s14.undo()
    s14.write("Sensor-14: " + str14 + " cm", font=style3)

    s15.undo()
    s15.write("Sensor-15: " + str15 + " cm", font=style3)

    s16.undo()
    s16.write("Sensor-16: " + str16 + " cm", font=style3)

    t1.speed(10)
    t1.goto(num19+(num10 * math.cos(math.radians(90))), num20-(num10 * math.sin(math.radians(90))))
    t1.goto(num19+(num10 * math.cos(math.radians(67.5))), num20-(num10 * math.sin(math.radians(67.5))))
    t1.goto(num19+(num11 * math.cos(math.radians(67.5))), num20-(num11 * math.sin(math.radians(67.5))))
    t1.goto(num19+(num11 * math.cos(math.radians(45))), num20-(num11 * math.sin(math.radians(45))))
    t1.goto(num19+(num12 * math.cos(math.radians(45))), num20-(num12 * math.sin(math.radians(45))))
    t1.goto(num19+(num12 * math.cos(math.radians(22.5))), num20-(num12 * math.sin(math.radians(22.5))))
    t1.goto(num19+(num13 * math.cos(math.radians(22.5))), num20-(num13 * math.sin(math.radians(22.5))))
    t1.goto(num19+(num13 * math.cos(math.radians(0))), num20+0)
    t1.goto(num19+(num14 * math.cos(math.radians(0))), num20+0)
    t1.goto(num19+(num14 * math.cos(math.radians(22.5))), num20+(num14 * math.sin(math.radians(22.5))))
    t1.goto(num19+(num15 * math.cos(math.radians(22.5))), num20+(num15 * math.sin(math.radians(22.5))))
    t1.goto(num19+(num15 * math.cos(math.radians(45))), num20+(num15 * math.sin(math.radians(45))))
    t1.goto(num19+(num16 * math.cos(math.radians(45))), num20+(num16 * math.sin(math.radians(45))))
    t1.goto(num19+(num16 * math.cos(math.radians(67.5))), num20+(num16 * math.sin(math.radians(67.5))))
    t1.goto(num19+(num1 * math.cos(math.radians(67.5))), num20+(num1 * math.sin(math.radians(67.5))))
    t1.goto(num19+(num1 * math.cos(math.radians(90))), num20+(num1 * math.sin(math.radians(90))))
    t1.goto(num19-(num2 * math.cos(math.radians(90))), num20+(num2 * math.sin(math.radians(90))))
    t1.goto(num19-(num2 * math.cos(math.radians(67.5))), num20+(num2 * math.sin(math.radians(67.5))))
    t1.goto(num19-(num3 * math.cos(math.radians(67.5))), num20+(num3 * math.sin(math.radians(67.5))))
    t1.goto(num19-(num3 * math.cos(math.radians(45))), num20+(num3 * math.sin(math.radians(45))))
    t1.goto(num19-(num4 * math.cos(math.radians(45))), num20+(num4 * math.sin(math.radians(45))))
    t1.goto(num19-(num4 * math.cos(math.radians(22.5))), num20+(num4 * math.sin(math.radians(22.5))))
    t1.goto(num19-(num5 * math.cos(math.radians(22.5))), num20+(num5 * math.sin(math.radians(22.5))))
    t1.goto(num19-(num5 * math.cos(math.radians(0))), num20+0)
    t1.goto(num19-(num6 * math.cos(math.radians(0))), num20+0)
    t1.goto(num19-(num6 * math.cos(math.radians(22.5))), num20-(num6 * math.sin(math.radians(22.5))))
    t1.goto(num19-(num7 * math.cos(math.radians(22.5))), num20-(num7 * math.sin(math.radians(22.5))))
    t1.goto(num19-(num7 * math.cos(math.radians(45))), num20-(num7 * math.sin(math.radians(45))))
    t1.goto(num19-(num8 * math.cos(math.radians(45))), num20-(num8 * math.sin(math.radians(45))))
    t1.goto(num19-(num8 * math.cos(math.radians(67.5))), num20-(num8 * math.sin(math.radians(67.5))))
    t1.goto(num19-(num9 * math.cos(math.radians(67.5))), num20-(num9 * math.sin(math.radians(67.5))))
    t1.goto(num19-(num9 * math.cos(math.radians(90))), num20-(num9 * math.sin(math.radians(90))))

    delay(-1000000000000000000)
    if i % 2 == 0:
        t1.clear()

    # print(str)
    # print(distance, "cm")

# Close the socket
sock.close()
